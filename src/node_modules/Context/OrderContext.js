import React, { createContext, useContext, useState } from "react";
import { toast } from "react-hot-toast";

const OrderContext = createContext();

const OrderContextProvider = (props) => {
  let [cartItems, setCartItems] = useState([]);
  let [totalPrice, setTotalPrice] = useState(0);
  let [totalQuantities, setTotalQuantities] = useState(0);
  let [qty, setQty] = useState(1);

  const onAdd = (product, quantity = 1) => {
    const itemIndex = cartItems.findIndex((value) => value.id === product.id);

    if (itemIndex < 0) {
      const newProduct = {
        ...product,
        quantity: quantity,
      };
      setCartItems([...cartItems, newProduct]);
      setTotalPrice((prevTotalPrice) => +prevTotalPrice + +newProduct.price);
    }

    toast.success(`${product.title} добавлен в корзину.`);
  };

  const onDelete = (vendorCode, qty) => {
    const deletedItem = cartItems.find((item) => item.vendorCode == vendorCode);
    const newCart = cartItems.filter((item) => item !== deletedItem);
    setCartItems(newCart);
    setTotalPrice(
      (prevTotalPrice) => +prevTotalPrice - +deletedItem.price * qty
    );
  };

  const handlePlus = (id) => {
    setQty((prevQty) => prevQty + 1);
  };

  const handleMinus = (id) => {
    setQty((prevQty) => {
      return prevQty - 1;
    });
  };

  const value = {
    items: cartItems,
    onAdd: onAdd,
    onDelete: onDelete,
    handlePlus: handlePlus,
    handleMinus: handleMinus,
    qty: qty,
    totalPrice: totalPrice,
    setTotalPrice: setTotalPrice,
  };

  return (
    <OrderContext.Provider value={value}>
      {props.children}
    </OrderContext.Provider>
  );
};

export { OrderContext, OrderContextProvider };
